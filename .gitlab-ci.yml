# FULL DOCUMENTATION CAN BE FOUND HERE: #https://docs.gitlab.com/ce/ci/yaml/

# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: golang:1.11-alpine
# image: node:8.11-alpine

# variables:
#   PROJECT_PATH: "$GOPATH/src/github.com/techdecaf/cgen"

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - /apt-cache
    - /go/src

# run in order.
stages:
  - test
  - deploy

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
services:
# you can specify a alias to access the locally attached service.
#  - redis:latest
#    alias: redis
#  - mongo:3.4

# runs before each job
# before_script:
# - apk add make curl git

test:
  image: golang:1.11-alpine
  stage: test
  script:
    - export PROJECT_PATH=$GOPATH/src/github.com/techdecaf/cgen
    - apk add make curl git
    - mkdir -p $PROJECT_PATH && cd $$PROJECT_PATH
    - cp -r $CI_PROJECT_DIR/* .
    - pwd
    - ls -la
    - make clean install test build
  # coverage: /All files\s*\|\s*([\d\.]+)/

deploy:
  image: mesosphere/aws-cli:1.14.5
  stage: deploy
  script:
    - eval $(curl -s "$DECAF_URL/keys/aws/set/env/linux/website-update?jwt=$DECAF_TOKEN")
    - make publish
  only:
    - master
